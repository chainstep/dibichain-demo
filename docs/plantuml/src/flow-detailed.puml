@startuml
autonumber "<b>[00]"

participant "Third Party" as TP3
participant "Company A UI" as COMPAU
participant "Company A" as COMPA
participant "Company B UI" as COMPBU
participant "Company B" as COMPB
participant "Operator" as OP
participant "EventBus" as BC


== Getting Product information from third party ==

-> TP3: add product data
TP3 -> COMPA: send product data 
note right
    POST /my-products
end note
COMPA -> COMPA: store my product data
-> TP3: add documents data
TP3 -> COMPA: send documents data 
note right
    POST /my-documents
end note
COMPA -> COMPA: store my product data
COMPAU -> COMPA: get my products
note right
    GET /my-products
end note
COMPAU -> COMPA: get my documents
note right
    GET /my-documents
end note
|||

== Announcing new Product ==

COMPAU -> COMPA: anounce new product
note right
    POST /my-new-products
end note
COMPA -> OP: anounce new product\n(id, uid, name, type, number, hash)
note right
    POST /new-products
end note
OP -> BC: issue new product data\n(id, uid, name, type, number, hash)
COMPA -> COMPA: store my new product data
COMPAU -> COMPA: get my new products
note right
    GET /my-new-products
end note
BC -> COMPB: notify new product\n(id, uid, name, type, number, hash)
note left
    event "NewProduct"
end note
COMPB -> COMPB: store new product data
COMPBU -> COMPB: get new products
note right
    GET /new-products
end note
|||

== Requesting Product Details ==

COMPBU -> COMPB: request product details
note right
    POST /my-product-details-request
end note
COMPB -> OP: request product details\n(uid, pubKeyB, algorithm)
note right
    POST /product-details-request
end note
OP -> BC: issue product details request\n(uid, pubKeyB, algorithm)
COMPB -> COMPB: store my product\ndetails request
COMPBU -> COMPB: get my product details requests
note right
    GET /my-product-details-requests
end note
BC -> COMPA: notify product details request\n(uid, pubKeyB, algorithm)
note left
    event "ProductDetailsRequest"
end note
COMPA -> COMPA: store product\ndetails request
COMPAU -> COMPA: get product details requests
note right
    GET /product-details-requests
end note
|||

== Providing Product Details ==
COMPAU -> COMPA: send product details
note right
    POST /my-product-details-responses
end note

COMPA -> COMPA: get product data
COMPA -> COMPA: get documents data
COMPA -> COMPA: merge documents\nand product data
COMPA -> COMPA: encrypt(merged data, pubKeyB)
COMPA -> OP: send encrypted merged data\n(uid, pubKeyB, encData)
note right
    POST /product-details-responses
end note
COMPA -> COMPA: update product details request\ndata with responded
|||

== Getting Product Details ==

COMPB -> OP: get encrypted merged data\n(uid, pubKeyB)
note right
    GET /product-details-responses
end note
COMPB -> COMPB: decrypt merged data
COMPB -> COMPB: split documents and product data
COMPB -> COMPB: hash product data
COMPB -> COMPB: validate hashes
COMPB -> COMPB: store product data
COMPB -> COMPB: store documents data
COMPBU -> COMPB: get products
note right
    GET /products
end note
COMPBU -> COMPB: get documents
note right
    GET /documents
end note

|||

@enduml