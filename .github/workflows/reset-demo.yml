name: reset dibichain demo

on:
  workflow_dispatch:

# You also need to add a RUNNER_PRIVATE_KEY action secret
# and fill it with an ssh private key of the server user
# env:
  # services server config
  # SERVICES_SERVER_DOMAIN: services.dibichain.de
  # SERVICES_SERVER_USER: dibichain
  # OPERATOR_SERVER_FOLDER: dibichain-operator
  # LOGISTEX_SERVER_FOLDER: dibichain-logistex
  # LOGISTLY_SERVER_FOLDER: dibichain-logistly

  # # chain server config
  # CHAIN_SERVER_DOMAIN: chain.dibichain.de
  # CHAIN_SERVER_USER: dibichain
  # CHAIN_SERVER_FOLDER: dibichain-ganache

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2  
  # stop-and-reset-services:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Prepare runner
  #       run: |
  #         mkdir -p ~/.ssh
  #         touch ~/.ssh/known_hosts
  #         ssh-keyscan ${{ env.SERVICES_SERVER_DOMAIN }} >> ~/.ssh/known_hosts
  #         touch ~/.ssh/id_ed25519
  #         chmod 600 ~/.ssh/id_ed25519
  #         echo "${{ secrets.RUNNER_PRIVATE_KEY }}" >> ~/.ssh/id_ed25519
  #         echo "SSH_DOMAIN=${{ env.SERVICES_SERVER_USER }}@${{ env.SERVICES_SERVER_DOMAIN }}" >> $GITHUB_ENV &&

  #     - name: Stop and reset services
  #       run: |
  #         ssh -t ${{ env.SSH_DOMAIN }} "
  #           sudo docker kill $(sudo docker ps -q)
  #           rm -rf ${{ env.OPERATOR_SERVER_FOLDER }}
  #           rm -rf ${{ env.LOGISTEX_SERVER_FOLDER }}
  #           rm -rf ${{ env.LOGISTLY_SERVER_FOLDER }}
  #         "

  # stop-and-reset-chain:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Prepare runner
  #       run: |
  #         mkdir -p ~/.ssh
  #         touch ~/.ssh/known_hosts
  #         ssh-keyscan ${{ env.CHAIN_SERVER_DOMAIN }} >> ~/.ssh/known_hosts
  #         touch ~/.ssh/id_ed25519
  #         chmod 600 ~/.ssh/id_ed25519
  #         echo "${{ secrets.RUNNER_PRIVATE_KEY }}" >> ~/.ssh/id_ed25519
  #         echo "SSH_DOMAIN=${{ env.CHAIN_SERVER_USER }}@${{ env.CHAIN_SERVER_DOMAIN }}" >> $GITHUB_ENV &&

  #     - name: Stop and reset chain
  #       run: |
  #         ssh -t ${{ env.SSH_DOMAIN }} "
  #           sudo docker kill $(sudo docker ps -q)
  #           rm -rf ${{ env.CHAIN_SERVER_FOLDER }}
  #         "

  # restart-chain:
  #   runs-on: ubuntu-latest
  #   needs:
  #    - stop-and-reset-chain
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
      
  #     - name: deploy chain
  #       uses: ./.github/workflows/deploy-chain

  # restart-services:
  #   runs-on: ubuntu-latest
  #   needs:
  #    - stop-and-reset-services
  #    - restart-chain
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
      
  #     - name: deploy operator
  #       uses: ./.github/workflows/deploy-operator

  #     - name: deploy logistex
  #       uses: ./.github/workflows/deploy-logistex

  #     - name: deploy logistly
  #       uses: ./.github/workflows/deploy-logistly